<?xml version="1.0"?>
<project name="java-junit-template-project" default="test" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">
    <property name="main.src.dir" location="./src"/><!-- 需要配置 -->
    <property name="test.src.dir" location="./test"/><!-- 需要配置 -->
    <property name="result.dir" location="./target"/>
    <property name="main.build.dir" location="${result.dir}/classes/main"/>
    <property name="test.build.dir" location="${result.dir}/classes/test"/>
    <property name="result.report.dir" location="${result.dir}/site/jacoco"/>
    <property name="result.exec.file" location="${result.dir}/jacoco.exec"/>

    <!--  Step 1: Import JaCoCo Ant tasks
          如果ANT_HOME里面已经有这个jar包，则无需配置
    -->
    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
        <classpath path="lib/jacocoant.jar"/>
    </taskdef>

    <target name="clean">
        <delete dir="${result.dir}"/>
        <echo message="clean done"/>
    </target>

    <path id="classpath.base"/>

    <path id="classpath.test">
        <pathelement location="lib/junit-4.12.jar"/><!-- 需要配置 -->
        <pathelement location="lib/hamcrest-core-1.3.jar"/><!-- 需要配置 -->
        <pathelement location="${main.build.dir}"/>
        <path refid="classpath.base"/>
    </path>


    <target name="compile">
        <mkdir dir="${main.build.dir}"/>
        <javac srcdir="${main.src.dir}" destdir="${main.build.dir}" debug="true" includeantruntime="false">
            <classpath refid="classpath.base"/>
        </javac>
    </target>

    <target name="test-compile" depends="compile">
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
            <classpath refid="classpath.test"/>
        </javac>
    </target>

    <target name="test" depends="test-compile">
        <!--
         Step 2: Wrap test execution with the JaCoCo coverage task
        -->
        <jacoco:coverage destfile="${result.exec.file}">
            <junit printsummary="yes" haltonfailure="yes" fork="true" forkmode="once">
                <classpath>
                    <path refid="classpath.test"/>
                    <pathelement location="${test.build.dir}"/>
                </classpath>
                <!--<formatter type="brief" usefile="true" />-->
                <batchtest>
                    <fileset dir="${test.src.dir}" includes="**/*Test.java"/>
                </batchtest>
            </junit>
        </jacoco:coverage>
    </target>

    <target name="report" depends="test">
        <jacoco:report>
            <!--
             This task needs the collected execution data and ...
            -->
            <executiondata>
                <file file="${result.exec.file}"/>
            </executiondata>
            <!--  the class files and optional source files ...  -->
            <structure name="JaCoCo Ant Example">
                <classfiles>
                    <fileset dir="${main.build.dir}"/>
                </classfiles>
                <sourcefiles encoding="UTF-8">
                    <fileset dir="${main.src.dir}"/>
                </sourcefiles>
            </structure>
            <!--  to produce reports in different formats.  -->
            <html destdir="${result.report.dir}"/>
            <csv destfile="${result.report.dir}/report.csv"/>
            <xml destfile="${result.report.dir}/report.xml"/>
        </jacoco:report>
    </target>
</project>
